name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Smoke tests daily at 11:10 AM
    - cron: "10 11 * * *"
    # Sanity tests every 2 days at 11:10 AM
    - cron: "10 11 */2 * *"

jobs:
  checkout-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  install-dependencies:
    runs-on: ubuntu-latest
    needs: checkout-code
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --force-reinstall -r requirements.txt

  setup-web:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Install Chrome & Chromedriver
        uses: browser-actions/setup-chrome@v1

  setup-android:
    runs-on: ubuntu-latest
    needs: setup-web
    steps:
      - name: Setup Emulator and SDK for virtual devices
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio
          disable-animations: true
          script: |
            timeout=300
            bootanim=""
            while [[ "$timeout" -gt 0 ]]; do
              bootanim=$(adb -e shell getprop init.svc.bootanim 2>/dev/null)
              if [[ "$bootanim" == "stopped" ]]; then
                echo "Emulator booted!"
                break
              fi
              sleep 5
              timeout=$((timeout-5))
            done
            adb devices

  run-smoke-tests:
    runs-on: ubuntu-latest
    needs: [setup-web, setup-android]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Smoke Tests
        run: |
          mkdir -p results
          python -m robot -d results --include smoke tests/web
          ls -l results

      - name: Upload Smoke Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: results/

  run-sanity-tests:
    runs-on: ubuntu-latest
    needs: [setup-web, setup-android]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Sanity Tests
        run: |
          mkdir -p results
          python -m robot -d results --include sanity tests/web
          ls -l results

      - name: Upload Sanity Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sanity-test-results
          path: results/
