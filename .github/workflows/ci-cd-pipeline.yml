name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Smoke tests daily at 11:10 AM
    - cron: "10 11 * * *"
    # Sanity tests every 2 days at 11:10 AM
    - cron: "10 11 */2 * *"
  workflow_dispatch:  # optional manual trigger

# -----------------------
# WEB TESTS (on GitHub-hosted runner)
# -----------------------
jobs:
  checkout-code-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  install-dependencies-web:
    runs-on: ubuntu-latest
    needs: checkout-code-web
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --force-reinstall -r requirements.txt

  setup-web:
    runs-on: ubuntu-latest
    needs: install-dependencies-web
    steps:
      - name: Install Chrome & Chromedriver
        uses: browser-actions/setup-chrome@v1

  run-smoke-tests-web:
    runs-on: ubuntu-latest
    needs: setup-web
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Smoke Tests
        run: |
          mkdir -p results
          python -m robot -d results --include smoke tests/web
          ls -l results
      - name: Upload Smoke Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results-web
          path: results/

  run-sanity-tests-web:
    runs-on: ubuntu-latest
    needs: setup-web
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Sanity Tests
        run: |
          mkdir -p results
          python -m robot -d results --include sanity tests/web
          ls -l results
      - name: Upload Sanity Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sanity-test-results-web
          path: results/

# -----------------------
# ANDROID SETUP + TESTS (self-hosted runner)
# -----------------------
setup-android:
  runs-on: self-hosted
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Verify Android SDK is installed
      run: |
        echo "Checking Android SDK..."
        if [ ! -d "$ANDROID_HOME" ]; then
          echo "ERROR: ANDROID_HOME is not set. Install SDK first."
          exit 1
        fi
        sdkmanager --list

    - name: Start Emulator (if not running)
      run: |
        DEVICE_NAME="Pixel_9_Pro_API_35"
        echo "Checking if emulator $DEVICE_NAME is running..."
        if ! adb devices | grep -q "$DEVICE_NAME"; then
          echo "Starting emulator $DEVICE_NAME..."
          emulator -avd $DEVICE_NAME -no-window -gpu swiftshader_indirect -noaudio &
          # wait for emulator to boot
          timeout=120
          while [ $timeout -gt 0 ]; do
            BOOT_COMPLETED=$(adb -s emulator-5554 shell getprop sys.boot_completed 2>/dev/null)
            if [ "$BOOT_COMPLETED" == "1" ]; then
              echo "Emulator booted!"
              break
            fi
            sleep 5
            timeout=$((timeout-5))
          done
          if [ "$BOOT_COMPLETED" != "1" ]; then
            echo "ERROR: Emulator did not boot in time"
            exit 1
          fi
        else
          echo "Emulator already running."
        fi

run-smoke-tests-android:
  runs-on: self-hosted
  needs: setup-android
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Smoke Tests on Local Emulator
      run: |
        mkdir -p results
        python -m robot -d results --include smoke tests/android
        ls -l results

    - name: Upload Smoke Test Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: smoke-test-results-android
        path: results/

run-sanity-tests-android:
  runs-on: self-hosted
  needs: setup-android
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Sanity Tests on Local Emulator
      run: |
        mkdir -p results
        python -m robot -d results --include sanity tests/android
        ls -l results

    - name: Upload Sanity Test Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sanity-test-results-android
        path: results/
