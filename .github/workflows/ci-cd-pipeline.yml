name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"   # Smoke tests daily
    - cron: "0 1 */2 * *" # Sanity tests every 2 days

jobs:
  checkout-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  install-dependencies:
    runs-on: ubuntu-latest
    needs: checkout-code
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  setup-web:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Install Chrome & Chromedriver
        uses: browser-actions/setup-chrome@v1

  setup-android:
    runs-on: ubuntu-latest
    needs: setup-web
    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android Emulator & SDK
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: arm64-v8a
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio
          disable-animations: true
          emulator-boot-timeout: 300
          script: |
            echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
            boot_completed=""
            max_wait_minutes=15
            elapsed_seconds=0
            while ! adb devices | grep -q emulator; do
              echo "Waiting for emulator..."
              sleep 5
              elapsed_seconds=$((elapsed_seconds + 5))
              if [ $elapsed_seconds -ge $((max_wait_minutes*60)) ]; then
                echo "ERROR: Emulator did not appear within $max_wait_minutes minutes."
                exit 1
              fi
            done
            EMULATOR_ID=$(adb devices | grep emulator | awk '{print $1}')
            echo "Emulator ID: $EMULATOR_ID"
            boot_completed=""
            elapsed_seconds=0
            while [ "$boot_completed" != "1" ] && [ $elapsed_seconds -lt $((max_wait_minutes*60)) ]; do
              echo "Waiting for full boot... ($elapsed_seconds seconds elapsed)"
              sleep 5
              elapsed_seconds=$((elapsed_seconds + 5))
              boot_completed=$(adb -s $EMULATOR_ID shell getprop sys.boot_completed 2>/dev/null | tr -d '\r' || echo "")
            done
            if [ "$boot_completed" != "1" ]; then
              echo "ERROR: Emulator did not boot within $max_wait_minutes minutes."
              exit 1
            fi
            echo "Android Emulator is Ready!"

  run-tests:
    runs-on: ubuntu-latest
    needs: setup-android
    steps:
      - name: Run Smoke Tests
        if: github.event_name == 'schedule' && github.event.schedule == '0 0 * * *'
        run: |
          mkdir -p results
          python -m robot -d results --include smoke tests/

      - name: Run Sanity Tests
        if: github.event_name == 'schedule' && github.event.schedule == '0 1 */2 * *'
        run: |
          mkdir -p results
          python -m robot -d results --include sanity tests/

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: results/
